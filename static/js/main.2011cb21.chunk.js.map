{"version":3,"sources":["types/Status.ts","features/currentTodo.ts","features/filter.ts","features/todos.ts","app/store.ts","app/hooks.ts","components/TodoList/TodoList.tsx","components/TodoFilter/TodoFilter.tsx","components/Loader/Loader.tsx","api.ts","components/TodoModal/TodoModal.tsx","App.tsx","utils/filterTodos.ts","index.tsx"],"names":["Status","actions","todo","type","payload","currentTodoReducer","state","action","status","query","filterInitialValue","All","filterReducer","filter","todos","todosReducer","Array","isArray","rootReducer","combineReducers","currentTodo","store","createStore","composeWithDevTools","applyMiddleware","thunk","useAppDispatch","useDispatch","useAppSelector","useSelector","TodoList","dispatch","length","className","map","id","title","completed","classNames","onClick","TodoFilter","setIsTodosLoading","useState","setQuery","debouncedQueryChange","useCallback","debounce","value","onSubmit","event","preventDefault","onChange","currentStatus","currentTarget","defaultValue","Object","entries","key","placeholder","target","style","pointerEvents","Loader","get","url","delay","fullURL","Promise","resolve","setTimeout","then","fetch","res","json","TodoModal","isLoading","setIsLoading","user","setUser","useEffect","fetchData","a","userId","userData","Error","href","email","name","App","filteredTodos","hasRelatedTitle","toLowerCase","includes","hasRelatedStatus","filterTodos","response","Root","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.2011cb21.chunk.js","sourcesContent":["export enum Status {\n  All = 'all',\n  Active = 'active',\n  Completed = 'completed',\n}\n","import { Todo } from '../types/Todo';\n\n// we use string literal as a type to avoid mistype in future\ntype RemoveTodoAction = { type: 'currentTodo/REMOVE' };\n\ntype SetTodoAction = {\n  type: 'currentTodo/SET';\n  payload: Todo;\n};\n\nconst removeTodo = (): RemoveTodoAction => ({ type: 'currentTodo/REMOVE' });\n\nconst setTodo = (todo: Todo): SetTodoAction => ({\n  type: 'currentTodo/SET',\n  payload: todo,\n});\n\nexport const actions = { setTodo, removeTodo };\n\ntype State = Todo | null;\ntype Action = SetTodoAction | RemoveTodoAction;\n\nconst currentTodoReducer = (\n  state: State = null,\n  action: Action,\n): State => {\n  switch (action.type) {\n    case 'currentTodo/SET': {\n      return action.payload;\n    }\n\n    case 'currentTodo/REMOVE': {\n      return null;\n    }\n\n    default:\n      return state;\n  }\n};\n\nexport default currentTodoReducer;\n","import { Status } from '../types/Status';\nimport { Filter } from '../types/Filter';\n\ntype SetStatusActionAction = {\n  type: 'filter/SET_STATUS';\n  payload: Status;\n};\n\ntype SetQueryAction = {\n  type: 'filter/SET_QUERY';\n  payload: string;\n};\n\nconst setStatus = (status: Status): SetStatusActionAction => ({\n  type: 'filter/SET_STATUS',\n  payload: status,\n});\n\nconst setQuery = (query: string): SetQueryAction => ({\n  type: 'filter/SET_QUERY',\n  payload: query,\n});\n\nexport const actions = { setStatus, setQuery };\n\ntype Actions = SetStatusActionAction | SetQueryAction;\n\nconst filterInitialValue: Filter = {\n  query: '',\n  status: Status.All,\n};\n\nconst filterReducer = (\n  filter: Filter = filterInitialValue,\n  action: Actions,\n) => {\n  switch (action.type) {\n    case 'filter/SET_QUERY': {\n      return { ...filter, query: action.payload };\n    }\n\n    case 'filter/SET_STATUS': {\n      return { ...filter, status: action.payload };\n    }\n\n    default: {\n      return filter;\n    }\n  }\n};\n\nexport default filterReducer;\n","import { Todo } from '../types/Todo';\n\ntype AddTodosAction = {\n  type: 'todos/ADD';\n  payload: Todo[] | Todo;\n};\n\nconst addTodos = (todos: Todo[] | Todo): AddTodosAction => ({\n  type: 'todos/ADD',\n  payload: todos,\n});\n\nexport const actions = { addTodos };\n\ntype Actions = AddTodosAction;\n\n// made it with switch case so it was possible to scale (add possibility to remove todo etc.)\nconst todosReducer = (state: Todo[] = [], action: Actions): Todo[] => {\n  switch (action.type) {\n    case 'todos/ADD': {\n      return Array.isArray(action.payload)\n        ? [...state, ...action.payload]\n        : [...state, action.payload];\n    }\n\n    default: {\n      return state;\n    }\n  }\n};\n\nexport default todosReducer;\n","import { createStore, applyMiddleware, combineReducers } from 'redux';\nimport { composeWithDevTools } from 'redux-devtools-extension';\nimport thunk from 'redux-thunk';\n\nimport currentTodoReducer from '../features/currentTodo';\nimport filterReducer from '../features/filter';\nimport todosReducer from '../features/todos';\n\nconst rootReducer = combineReducers({\n  currentTodo: currentTodoReducer,\n  filter: filterReducer,\n  todos: todosReducer,\n});\n\n// The `store` is passed to the Provider in `/src/index.tsx`\nexport const store = createStore(\n  rootReducer,\n  composeWithDevTools(\n    applyMiddleware(thunk),\n  ),\n);\n\nexport type RootState = ReturnType<typeof store.getState>;\nexport type AppDispatch = typeof store.dispatch;\n","import { TypedUseSelectorHook, useDispatch, useSelector } from 'react-redux';\nimport { AppDispatch, RootState } from './store';\n\nexport const useAppDispatch: () => AppDispatch = useDispatch;\nexport const useAppSelector: TypedUseSelectorHook<RootState> = useSelector;\n","/* eslint-disable max-len */\nimport React from 'react';\nimport classNames from 'classnames';\nimport { Todo } from '../../types/Todo';\nimport { useAppDispatch, useAppSelector } from '../../app/hooks';\nimport { actions } from '../../features/currentTodo';\n\ninterface Props {\n  todos: Todo[];\n}\n\nexport const TodoList: React.FC<Props> = ({ todos }) => {\n  const currentTodo = useAppSelector(state => state.currentTodo);\n  const dispatch = useAppDispatch();\n\n  return (\n    todos.length\n      ? (\n        <table className=\"table is-narrow is-fullwidth\">\n          <thead>\n            <tr>\n              <th>#</th>\n\n              <th>\n                <span className=\"icon\">\n                  <i className=\"fas fa-check\" />\n                </span>\n              </th>\n\n              <th>Title</th>\n              <th> </th>\n            </tr>\n          </thead>\n\n          <tbody>\n            {todos.map(todo => {\n              const {\n                id, title, completed,\n              } = todo;\n\n              return (\n                <tr data-cy=\"todo\" key={id}>\n                  <td className=\"is-vcentered\">{id}</td>\n                  <td className=\"is-vcentered\">\n                    {completed && (\n                      <span className=\"icon\" data-cy=\"iconCompleted\">\n                        <i className=\"fas fa-check\" />\n                      </span>\n                    )}\n                  </td>\n\n                  <td className=\"is-vcentered is-expanded\">\n                    <p className={classNames({\n                      'has-text-danger': !completed,\n                      'has-text-success': completed,\n                    })}\n                    >\n                      {title}\n                    </p>\n                  </td>\n\n                  <td className=\"has-text-right is-vcentered\">\n                    <button\n                      data-cy=\"selectButton\"\n                      className=\"button\"\n                      type=\"button\"\n                      onClick={() => dispatch(actions.setTodo(todo))}\n                    >\n                      <span className=\"icon\">\n                        <i\n                          className={classNames('far ', {\n                            'fa-eye': currentTodo?.id !== id,\n                            'fa-eye-slash': currentTodo?.id === id,\n                          })}\n                        />\n                      </span>\n                    </button>\n                  </td>\n                </tr>\n              );\n            })}\n          </tbody>\n        </table>\n      ) : (\n        <p className=\"notification is-warning\">\n          There are no todos matching current filter criteria\n        </p>\n      )\n  );\n};\n","import React, { useCallback, useState } from 'react';\nimport { debounce } from 'lodash';\nimport { useAppDispatch, useAppSelector } from '../../app/hooks';\nimport { actions } from '../../features/filter';\nimport { Status } from '../../types/Status';\n\ninterface Props {\n  setIsTodosLoading: React.Dispatch<React.SetStateAction<boolean>>;\n}\n\nexport const TodoFilter: React.FC<Props> = ({ setIsTodosLoading }) => {\n  const dispatch = useAppDispatch();\n  const filter = useAppSelector(state => state.filter);\n  const [query, setQuery] = useState('');\n\n  const debouncedQueryChange = useCallback(\n    debounce((value: string) => {\n      dispatch(actions.setQuery(value));\n      setIsTodosLoading(false);\n    }, 500), [],\n  );\n\n  const onQueryChange = (event: React.ChangeEvent<HTMLInputElement>) => {\n    setQuery(event.target.value);\n    setIsTodosLoading(true);\n\n    debouncedQueryChange(event.target.value);\n  };\n\n  const onReset = () => {\n    setQuery('');\n    dispatch(actions.setQuery(''));\n  };\n\n  const onStatusChange = (\n    event: React.SyntheticEvent<HTMLSelectElement, Event>,\n  ) => {\n    const currentStatus = event.currentTarget.value as Status;\n\n    dispatch(actions.setStatus(currentStatus));\n  };\n\n  return (\n    <form\n      className=\"field has-addons\"\n      onSubmit={event => event.preventDefault()}\n    >\n      <p className=\"control\">\n        <span className=\"select\">\n          <select\n            data-cy=\"statusSelect\"\n            onChange={onStatusChange}\n            defaultValue={filter.status}\n          >\n            {Object.entries(Status).map(([key, value]) => (\n              <option value={value} key={key}>{key}</option>\n            ))}\n          </select>\n        </span>\n      </p>\n\n      <p className=\"control is-expanded has-icons-left has-icons-right\">\n        <input\n          data-cy=\"searchInput\"\n          value={query}\n          type=\"text\"\n          className=\"input\"\n          placeholder=\"Search...\"\n          onChange={onQueryChange}\n        />\n        <span className=\"icon is-left\">\n          <i className=\"fas fa-magnifying-glass\" />\n        </span>\n\n        {query && (\n          <span className=\"icon is-right\" style={{ pointerEvents: 'all' }}>\n            {/* eslint-disable-next-line jsx-a11y/control-has-associated-label */}\n            <button\n              data-cy=\"clearSearchButton\"\n              type=\"button\"\n              className=\"delete\"\n              onClick={onReset}\n            />\n          </span>\n        )}\n      </p>\n    </form>\n  );\n};\n","import React from 'react';\nimport './Loader.scss';\n\nexport const Loader: React.FC = () => (\n  <div className=\"Loader\" data-cy=\"loader\">\n    <div className=\"Loader__content\" />\n  </div>\n);\n","import { Todo } from './types/Todo';\nimport { User } from './types/User';\n\n// eslint-disable-next-line max-len\nconst BASE_URL = 'https://mate-academy.github.io/react_dynamic-list-of-todos/api';\n\nfunction wait(delay: number): Promise<void> {\n  return new Promise(resolve => {\n    setTimeout(resolve, delay);\n  });\n}\n\nfunction get<T>(url: string): Promise<T> {\n  // eslint-disable-next-line prefer-template\n  const fullURL = BASE_URL + url + '.json';\n\n  return wait(300)\n    .then(() => fetch(fullURL))\n    .then(res => res.json());\n}\n\nexport const getTodos = () => get<Todo[]>('/todos');\n\nexport const getUser = (userId: number) => get<User>(`/users/${userId}`);\n","import React, { useEffect, useState } from 'react';\nimport { Loader } from '../Loader';\nimport { Todo } from '../../types/Todo';\nimport { User } from '../../types/User';\nimport { getUser } from '../../api';\nimport { useAppDispatch } from '../../app/hooks';\nimport { actions } from '../../features/currentTodo';\n\ninterface Props {\n  todo: Todo;\n}\n\nexport const TodoModal: React.FC<Props> = ({ todo }) => {\n  const dispatch = useAppDispatch();\n  const [isLoading, setIsLoading] = useState(true);\n  const [user, setUser] = useState<User | null>(null);\n\n  useEffect(() => {\n    const fetchData = async () => {\n      try {\n        const userData = await getUser(todo.userId);\n\n        setUser(userData);\n      } catch (err) {\n        throw new Error('Unable to load user');\n      } finally {\n        setIsLoading(false);\n      }\n    };\n\n    fetchData();\n  }, [todo.userId]);\n\n  return (\n    <div className=\"modal is-active\" data-cy=\"modal\">\n      <div className=\"modal-background\" />\n\n      {isLoading ? (\n        <Loader />\n      ) : (\n        <div className=\"modal-card\">\n          <header className=\"modal-card-head\">\n            <div\n              className=\"modal-card-title has-text-weight-medium\"\n              data-cy=\"modal-header\"\n            >\n              {`Todo #${todo.id}`}\n            </div>\n            {/* eslint-disable-next-line jsx-a11y/control-has-associated-label */}\n            <button\n              type=\"button\"\n              className=\"delete\"\n              data-cy=\"modal-close\"\n              onClick={() => dispatch(actions.removeTodo())}\n            />\n          </header>\n\n          <div className=\"modal-card-body\">\n            <p className=\"block\" data-cy=\"modal-title\">\n              {todo.title}\n            </p>\n\n            <p className=\"block\" data-cy=\"modal-user\">\n              {todo.completed ? (\n                <strong className=\"has-text-success\">Done</strong>\n              ) : (\n                <strong className=\"has-text-danger\">Planned</strong>\n              )}\n              {' by '}\n              <a href={`mailto:${user?.email}`}>{user?.name}</a>\n            </p>\n          </div>\n        </div>\n      )}\n    </div>\n  );\n};\n","import React, { useEffect, useState } from 'react';\nimport 'bulma/css/bulma.css';\nimport '@fortawesome/fontawesome-free/css/all.css';\n\nimport { TodoList } from './components/TodoList';\nimport { TodoFilter } from './components/TodoFilter';\nimport { TodoModal } from './components/TodoModal';\nimport { Loader } from './components/Loader';\nimport { useAppDispatch, useAppSelector } from './app/hooks';\nimport { actions } from './features/todos';\nimport { getTodos } from './api';\nimport { filterTodos } from './utils/filterTodos';\n\nexport const App: React.FC = () => {\n  const [isLoading, setIsLoading] = useState(false);\n  const { currentTodo, todos, filter } = useAppSelector(\n    state => state,\n  );\n  const dispatch = useAppDispatch();\n  const filteredTodos = filterTodos(todos, filter);\n\n  useEffect(() => {\n    const fetchData = async () => {\n      setIsLoading(true);\n\n      try {\n        const response = await getTodos();\n\n        dispatch(actions.addTodos(response));\n      } catch (err) {\n        throw new Error('Something went wrong');\n      } finally {\n        setIsLoading(false);\n      }\n    };\n\n    fetchData();\n  }, []);\n\n  return (\n    <>\n      <div className=\"section\">\n        <div className=\"container\">\n          <div className=\"box\">\n            <h1 className=\"title\">Todos:</h1>\n\n            <div className=\"block\">\n              <TodoFilter setIsTodosLoading={setIsLoading} />\n            </div>\n\n            <div className=\"block\">\n              {isLoading\n                ? <Loader />\n                : <TodoList todos={filteredTodos} />}\n            </div>\n          </div>\n        </div>\n      </div>\n\n      {currentTodo && (\n        <TodoModal todo={currentTodo} />\n      )}\n    </>\n  );\n};\n","import { Filter } from '../types/Filter';\nimport { Todo } from '../types/Todo';\n\nexport function filterTodos(todos: Todo[], filter: Filter) {\n  return todos.filter(todo => {\n    const hasRelatedTitle = filter.query\n      ? todo.title.toLowerCase().includes(filter.query.toLowerCase())\n      : true;\n    let hasRelatedStatus = true;\n\n    switch (filter.status) {\n      case 'completed':\n        hasRelatedStatus = todo.completed;\n        break;\n\n      case 'active':\n        hasRelatedStatus = !todo.completed;\n        break;\n\n      case 'all':\n        hasRelatedStatus = true;\n        break;\n\n      default:\n        hasRelatedStatus = true;\n    }\n\n    return hasRelatedTitle && hasRelatedStatus;\n  });\n}\n","import ReactDOM from 'react-dom';\nimport { Provider } from 'react-redux';\nimport { HashRouter as Router } from 'react-router-dom';\n\nimport { store } from './app/store';\nimport { App } from './App';\n\n// Just a convenient component with all the wrappers for the `App`\n// The Router component (if you use it) should be placed inside the Provider\nconst Root = () => (\n  <Provider store={store}>\n    <Router>\n      <App />\n    </Router>\n  </Provider>\n);\n\nReactDOM.render(<Root />, document.getElementById('root'));\n"],"sourceRoot":""}